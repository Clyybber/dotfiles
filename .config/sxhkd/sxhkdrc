##############
#SXHKD CONFIG#
##############


######
#Misc#
######

#Close everything and shutdown
super + alt + Escape
	mpc pause; \
	for window_id in $(bspc query -N -n .window); do \
		bspc node $window_id -c; \
	done; \
	bspc quit; \
	systemctl poweroff;

#Switch between tiled/monocle layout
super + m
	bspc desktop -l next

#Reload config
super + r
	pkill -USR1 -x sxhkd



############
#Spawn/Kill#
############

#Spawn terminal
super + Return
	alacritty

#Launcher
super + space
	rofi -show run

#Spawn terminal in slop selection
super + ctrl + Return
	bspc rule -a "st-256color" rectangle="$(slop)" state=floating; \
	st &; \
	sleep 0.1; \
	bspc rule -r "st-256color";

#Spawn some program in slop selection TODO: remove ugly sleep fix | fix conflicting keys with clear preselection
#super + ctrl + space
#	bspc rule -a "*" rectangle="$(slop)" state=floating; \
#	rofi -show run; \
#	sleep 0.5; \
#	bspc rule -r "*";

#Close/Kill
super + {_,shift + }w
	bspc node -{c,k}



#############
#State/Flags#
#############

#Set the window state
super + {t,shift + t,f}
	bspc node -t {tiled,pseudo_tiled,floating}

#Make a sticky floating window
super + s
	bspc node -t floating; \
	bspc node -g sticky

#Set the node flags
#super + ctrl + {x,y,z}
#	bspc node -g {locked,sticky,private}



#######
#Focus#
#######

#Focus node in direction
super + {h,j,k,l}
	{wdir=west;ddir=prev;,wdir=south;,wdir=north;,wdir=east;ddir=next;} \
	if ! bspc node -f $wdir; then \
		bspc desktop -f $ddir; \
	fi;

#Focus node for given path jump
super + {p,b}
	bspc node -f @{parent,brother}

#Focus next/previous node in current desktop
super + {_,shift + }Tab
	bspc node -f {next,prev}.local

#Focus next/previous desktop
super + {comma, period}
	bspc desktop -f {prev,next}.local

#Focus last node/desktop
super + BackSpace
	bspc node -f last

#Focus older or newer node in focus history
#super + {o,i}
#	bspc wm -h off; \
#	bspc node {older,newer} -f; \
#	bspc wm -h on

#Focus or send to given desktop | unneccessary with only 3 desktops
#super + {_,shift + }{1-9,0}
#	bspc {desktop -f,node -d} '{1-9,10}'



######
#Move#
######

#Swap current node with node in direction
super + shift + {h,j,k,l}
	dx=0;dy=0; \
	{wdir=west;ddir=prev;dx=-20;,wdir=south;dy=20;,wdir=north;dy=-20;,wdir=east;ddir=next;dx=20;} \
	bspc node -v $dx $dy; \
	if [ $? -eq 1 ]; then \
        	if ! bspc node -s $wdir; then \
        	        id=$(bspc query --nodes --node); \
			bspc node -d $ddir; \
			bspc node -f $id; \
        	fi; \
	fi;

#Move current node( and focus) to next/previous desktop
super + shift + {comma, period}
	id=$(bspc query --nodes --node); \
	bspc node -d {prev,next}; \
	bspc node -f $id



########
#Resize#
########

#Expand window
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

#Contract window
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}



#############
#Receptables# Still buggy atm
#############

#Insert receptable
#super + e
#	bspc node -i

#Clear receptables on dekstop
#super + shift + e
#	for win in "$(bspc query -N -d focused -n .leaf.\!window)"; do bspc node $win -k; done;



###########
#Preselect#
###########

#Preselect direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

#Not yet implemented in bspwm
#super + ctrl + alt + {h,j,k,l}
#	bspc node -o {-0.1,-0.1,+0.1,+0.1}

#Preselect ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

#Cancel preselection for focused node
super + ctrl + space
	bspc node -p cancel

#Cancel preselection for focused desktop
#super + ctrl + space
#	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#If current node is automatic, send it to last manual, otherwise pull last leaf / send node to preselection
super + y
	bspc query -N -n focused.automatic && bspc node -n last.!automatic || bspc node last.leaf -n focused



#########
#XF-Keys#
#########

#Switch monitor
XF86Display
	./shscripts/dualmonitor.sh switchSingleMonitor

#Switch from single-monitor to dual-monitor
XF86Display + ctrl
	./shscripts/dualmonitor.sh switchDualMonitor

#Lower master volume
XF86AudioLowerVolume
	amixer -D pulse sset Master 5%-

#Raise master volume
XF86AudioRaiseVolume
	amixer -D pulse sset Master 5%+

#Mute master
XF86AudioMute
	amixer sset Master toggle

#Lower mpd volume
ctrl + XF86AudioLowerVolume
	mpc volume -5

#Raise mpd volume
ctrl + XF86AudioRaiseVolume
	mpc volume +5

#Play/Pause mpd
XF86AudioPlay
	mpc toggle

#Stop (mpd)
XF86AudioStop
	mpc stop

#Previous/Beginning (mpd)
XF86AudioPrev
	if [ $(mpc | grep -Eo '[0-9]+:[0-9][0-9]/' | sed 's|\([0-9].*\):\([0-9][0-9]\)/|\1\2|') -ge 5 ]; then \
		mpc seek 0; \
	else \
		mpc prev; \
	fi;

#Next (mpd)
XF86AudioNext
	mpc next

#Raise brightness of inbuilt display
XF86MonBrightnessUp
	result="$(($\{$(($(xbacklight -get)+0.5))%%.*\}+10))"; \
	xbacklight -set $result; \
	notify-send "Internal Brightness: $((result<100?result:100))";

#Lower brightness of inbuilt display
XF86MonBrightnessDown
	result="$(($\{$(($(xbacklight -get)+0.5))%%.*\}-10))"; \
	xbacklight -set $result; \
	notify-send "Internal Brightness: $((result>0?result:0))";

#Raise brightness of external monitor
XF86MonBrightnessUp + ctrl
	./shscripts/exbacklightu.sh > /dev/null &	

#Lower brightness of external monitor
XF86MonBrightnessDown + ctrl
	./shscripts/exbacklightd.sh > /dev/null &

